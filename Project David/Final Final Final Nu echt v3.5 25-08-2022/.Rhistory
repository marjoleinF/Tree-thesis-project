ggwithinstats(x=`Generated Sample Size`,
y = `Tree Size`,
type = "np",
pairwise.display = "significant",
pairwise.comparisons = FALSE) +
scale_x_discrete(labels=c("N = 1" = expression("N"["gen"]*" = 1"),
"N = 5" = expression("N"["gen"]*" = 5"),
"N = 10" = expression("N"["gen"]*" = 10")))
########################## cool Rsq plots ----- N
allRsquaredwide <- allMSElong %>%
dplyr::mutate(fold = rep(1:100,98)) %>%
dplyr::select(Model, Dataset, Rsquared, fold) %>%
split(f = .$Dataset) %>%
map(~ (.) %>% pivot_wider(names_from = Model, values_from = Rsquared)) %>%
bind_rows()
RS1 <- allRsquaredwide %>%
pivot_longer(cols = c(`PPD: N=1`, `PPD: N=5`, `PPD: N=10`)) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("PPD: N=1", "PPD: N=5", "PPD: N=10")) %>%
recode_factor("PPD: N=1" = "N = 1", "PPD: N=5" = "N = 5", "PPD: N=10" = "N = 10"),
Rsquared = value,
Model = factor("PPD sampling")) %>%
dplyr::select(`Generated Sample Size`, Rsquared, Model)
RS2 <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=1, palt=0.00", "smearing: N=5, palt=0.00", "smearing: N=10, palt=0.00")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("smearing: N=1, palt=0.00", "smearing: N=5, palt=0.00", "smearing: N=10, palt=0.00")) %>%
recode_factor(`smearing: N=1, palt=0.00` = "N = 1", `smearing: N=5, palt=0.00` = "N = 5", `smearing: N=10, palt=0.00` = "N = 10"),
Rsquared = value,
Model = factor("Smearing: palt = 0")) %>%
dplyr::select(`Generated Sample Size`, Rsquared, Model)
RS3 <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=1, palt=0.25", "smearing: N=5, palt=0.25", "smearing: N=10, palt=0.25")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("smearing: N=1, palt=0.25", "smearing: N=5, palt=0.25", "smearing: N=10, palt=0.25")) %>%
recode_factor(`smearing: N=1, palt=0.25` = "N = 1", `smearing: N=5, palt=0.25` = "N = 5", `smearing: N=10, palt=0.25` = "N = 10"),
Rsquared = value,
Model = factor("Smearing: palt = .25")) %>%
dplyr::select(`Generated Sample Size`, Rsquared, Model)
RS4 <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=1, palt=0.50", "smearing: N=5, palt=0.50", "smearing: N=10, palt=0.50")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("smearing: N=1, palt=0.50", "smearing: N=5, palt=0.50", "smearing: N=10, palt=0.50")) %>%
recode_factor(`smearing: N=1, palt=0.50` = "N = 1", `smearing: N=5, palt=0.50` = "N = 5", `smearing: N=10, palt=0.50` = "N = 10"),
Rsquared = value,
Model = factor("Smearing: palt = .50")) %>%
dplyr::select(`Generated Sample Size`, Rsquared, Model)
Rsquaredplot_grouped <- (bind_rows(RS1, RS2, RS3, RS4)) %>%
grouped_ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
grouping.var = Model,
pairwise.comparisons = FALSE) &
scale_x_discrete(labels=c("N = 1" = expression("N"["gen"]*" = 1"),
"N = 5" = expression("N"["gen"]*" = 5"),
"N = 10" = expression("N"["gen"]*" = 10"))) &
ylab(expression(bold("R"^"2")))
Rsquaredplot_combined <- (bind_rows(RS1, RS2, RS3, RS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
pointpath = TRUE,
pairwise.comparisons = FALSE) +
scale_x_discrete(labels=c("N = 1" = expression("N"["gen"]*" = 1"),
"N = 5" = expression("N"["gen"]*" = 5"),
"N = 10" = expression("N"["gen"]*" = 10"))) +
ylab(expression(bold("R"^"2")))
########################## cool Tree Size plots ----- palt
TS2palt <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.1_palt.0", "Smearing_N.1_palt.0.25", "Smearing_N.1_palt.0.5")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(Smearing_N.1_palt.0 = "Palt = 0.00",Smearing_N.1_palt.0.25 = "Palt = 0.25", Smearing_N.1_palt.0.5 = "Palt = 0.50"),
`Tree Size` = value,
Model = factor("Smearing: N = 1")) %>%
dplyr::select(Palt, `Tree Size`, Model)
TS3palt <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.5_palt.0", "Smearing_N.5_palt.0.25","Smearing_N.5_palt.0.5")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(Smearing_N.5_palt.0 = "Palt = 0.00",Smearing_N.5_palt.0.25 = "Palt = 0.25", Smearing_N.5_palt.0.5 = "Palt = 0.50"),
`Tree Size` = value,
Model = factor("Smearing: N = 5")) %>%
dplyr::select(Palt, `Tree Size`, Model)
TS4palt <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.10_palt.0", "Smearing_N.10_palt.0.25" , "Smearing_N.10_palt.0.5")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(Smearing_N.10_palt.0 = "Palt = 0.00",Smearing_N.10_palt.0.25 = "Palt = 0.25", Smearing_N.10_palt.0.5 = "Palt = 0.50"),
`Tree Size` = value,
Model = factor("Smearing: N = 10")) %>%
dplyr::select(Palt, `Tree Size`, Model)
treesizeplot_grouped_palt <- (bind_rows(TS2palt, TS3palt, TS4palt)) %>%
grouped_ggwithinstats(x=Palt, y = `Tree Size`,
type = "np", pairwise.display = "significant",
grouping.var = Model,
pairwise.comparisons = FALSE) &
scale_x_discrete(labels=c("Palt = 0.00" = expression("p"["alt"]*" = 0"),
"Palt = 0.25" = expression("p"["alt"]*" = 0.25"),
"Palt = 0.50" = expression("p"["alt"]*" = 0.50"))) &
xlab(expression(bold("Level of permutation (p"["alt"]*")")))
treesizeplot_combined_palt <- (bind_rows(TS2palt, TS3palt, TS4palt)) %>%
ggwithinstats(x=Palt, y = `Tree Size`,
type = "np",
pairwise.display = "significant",
pairwise.comparisons = FALSE) +
scale_x_discrete(labels=c("Palt = 0.00" = expression("p"["alt"]*" = 0"),
"Palt = 0.25" = expression("p"["alt"]*" = 0.25"),
"Palt = 0.50" = expression("p"["alt"]*" = 0.50"))) +
xlab(expression(bold("Level of permutation (p"["alt"]*")")))
########################## cool Rsq plots ----- palt
RS2palt <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=1, palt=0.00", "smearing: N=1, palt=0.25", "smearing: N=1, palt=0.50")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(`smearing: N=1, palt=0.00` = "Palt = 0.00", `smearing: N=1, palt=0.25` = "Palt = 0.25", `smearing: N=1, palt=0.50` = "Palt = 0.50"),
Rsquared = value,
Model = factor("Smearing: N = 1")) %>%
dplyr::select(Palt, Rsquared, Model)
RS3palt <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=5, palt=0.00", "smearing: N=5, palt=0.25","smearing: N=5, palt=0.50")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(`smearing: N=5, palt=0.00` = "Palt = 0.00", `smearing: N=5, palt=0.25` = "Palt = 0.25", `smearing: N=5, palt=0.50` = "Palt = 0.50"),
Rsquared = value,
Model = factor("Smearing: N = 5")) %>%
dplyr::select(Palt, Rsquared, Model)
RS4palt <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=10, palt=0.00", "smearing: N=10, palt=0.25" , "smearing: N=10, palt=0.50")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(`smearing: N=10, palt=0.00` = "Palt = 0.00", `smearing: N=10, palt=0.25` = "Palt = 0.25", `smearing: N=10, palt=0.50` = "Palt = 0.50"),
Rsquared = value,
Model = factor("Smearing: N = 10")) %>%
dplyr::select(Palt, Rsquared, Model)
Rsquaredplot_grouped_palt <- (bind_rows(RS2palt, RS3palt, RS4palt)) %>%
grouped_ggwithinstats(x=Palt, y = Rsquared,
type = "np", pairwise.display = "significant",
grouping.var = Model,
pairwise.comparisons = FALSE) &
scale_x_discrete(labels=c("Palt = 0.00" = expression("p"["alt"]*" = 0"),
"Palt = 0.25" = expression("p"["alt"]*" = 0.25"),
"Palt = 0.50" = expression("p"["alt"]*" = 0.50"))) &
xlab(expression(bold("Level of permutation (p"["alt"]*")"))) &
ylab(expression(bold("R"^"2")))
Rsquaredplot_combined_palt <- (bind_rows(RS2palt, RS3palt, RS4palt)) %>%
ggwithinstats(x=Palt, y = Rsquared,
type = "np", pairwise.display = "significant",
pairwise.comparisons = FALSE) +
scale_x_discrete(labels=c("Palt = 0.00" = expression("p"["alt"]*" = 0"),
"Palt = 0.25" = expression("p"["alt"]*" = 0.25"),
"Palt = 0.50" = expression("p"["alt"]*" = 0.50"))) +
xlab(expression(bold("Level of permutation (p"["alt"]*")"))) +
ylab(expression(bold("R"^"2")))
save(list = c("plot_list", # tukey tests for best models -- ggplots
"plot_list2",# tukey tests for best models -- ggbetweenplots
"treesizeplot_grouped",
"treesizeplot_combined",
"Rsquaredplot_grouped",
"Rsquaredplot_combined",
"treesizeplot_grouped_palt",
"treesizeplot_combined_palt",
"Rsquaredplot_grouped_palt",
"Rsquaredplot_combined_palt"),
file = "coolplots.RData")
load("coolplots.Rdata")
plot_list
plot_list2
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
fig2a <- Rsquaredplot_combined & # fig 2
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
fig2a
Rsquaredplot_grouped_palt &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
fig3a <- Rsquaredplot_combined_palt & # fig 3
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
fig3a
treesizeplot_grouped &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
fig2b <- treesizeplot_combined & # fig 2
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
fig2b
treesizeplot_grouped_palt &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
fig3b <- treesizeplot_combined_palt & # fig 3
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
fig3b
fig2a + fig2b
fig3a + fig3b
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = c("Model 1", "Model 2", "Model 3")) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(R^2)) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", size = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
# Define the colors for the specific models
my_colors <- ggsci::pal_nejm("default")(4)
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = c("Model 1", "Model 2", "Model 3")) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(R^2)) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", size = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = c("Model 1", "Model 2", "Model 3")) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(R^2)) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(labels = c("Model 1", "Model 2", "Model 3")) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(R^2)) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins
schoolviolins
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = c(expression(R^2), expression(R{hoi}))) +
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = c(expression(R^2), expression("R"{"hoi"}))) +
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = c(expression(R^2), expression("R"^" hoi"))) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(R^2)) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins
plot(1,1,main=expression("Smearing: N"["gen"]*"=10, p"["alt"]*"0.50"))
plot(1,1,main=expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0.50"))
nicelabs <- c(expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0"),
expression("PPD: N"["gen"]*" = 10"),
expression("PPD: N"["gen"]*" = 5"),
expression("PPD: N"["gen"]*" = 1"),
expression("GLMM tree"),
expression("BART"))
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = nicelabs) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(R^2)) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = nicelabs) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
schoolviolins <- ggplot(allMSElong[allMSElong$Dataset == "ECLSKscience",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model))) +
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=1", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank()) +
ggtitle("ECLSKscience") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", size = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins + schoolviolins
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = nicelabs) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
ylab(expression(bold(Model))) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
schoolviolins <- ggplot(allMSElong[allMSElong$Dataset == "ECLSKscience",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model))) +
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=1", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
ggtitle("ECLSK science") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", size = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = nicelabs) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
ylab(expression(bold(Model))) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
schoolviolins <- ggplot(allMSElong[allMSElong$Dataset == "ECLSKscience",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model))) +
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=1", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank()) +
ggtitle("ECLSK science") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", size = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins + schoolviolins
nicelabs <- c(expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0"),
expression("PPD: N"["gen"]*" = 10"),
expression("PPD: N"["gen"]*" = 5"),
expression("PPD: N"["gen"]*" = 1"),
expression("BART"),
expression("GLMM tree"))
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = nicelabs) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
ylab(expression(bold(Model))) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
schoolviolins <- ggplot(allMSElong[allMSElong$Dataset == "ECLSKscience",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model))) +
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=1", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank()) +
ggtitle("ECLSK science") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", size = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins + schoolviolins
nicelabs <- c(expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0.50"),
expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0.25"),
expression("Smearing: N"["gen"]*" = 10, p"["alt"]*" = 0"),
expression("Smearing: N"["gen"]*" = 5, p"["alt"]*" = 0"),
expression("Smearing: N"["gen"]*" = 1, p"["alt"]*" = 0"),
expression("PPD: N"["gen"]*" = 10"),
expression("PPD: N"["gen"]*" = 5"),
expression("PPD: N"["gen"]*" = 1"),
expression("M-BART"),
expression("GLMM tree"))
ACTviolins <- ggplot(allMSElong[allMSElong$Dataset == "ACT",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model)),
labels = nicelabs) +
# Set the fill color for the specific models using scale_fill_manual
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=5", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
ylab(expression(bold(Model))) +
ggtitle("ACT") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", linewidth = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
schoolviolins <- ggplot(allMSElong[allMSElong$Dataset == "ECLSKscience",], aes(x=Rsquared, y=Model)) +
scale_y_discrete(limits = rev(levels(allMSElong$Model))) +
scale_fill_manual(values = c(my_colors, rep("grey90", times = 10))) +
geom_violin(aes(fill = ifelse(Model %in% c("GLMM tree", "BART", "PPD: N=1", "smearing: N=1, palt=0.00"), Model, "Others"))) +
theme_apa() +
stat_summary(fun = "mean", geom = "point", shape = 18, size = 3) +
xlab(expression(bold(R^2))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank()) +
ggtitle("ECLSK science") +
guides(fill = "none") +
geom_hline(yintercept = c(9.5, 12.5), linetype = "dashed", color = "black", size = 0.5) +
coord_cartesian(xlim = c(-0.30,0.75))
ACTviolins + schoolviolins
load("coolplots.Rdata")
plot_list
plot_list2
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`M-BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
fig2a <- Rsquaredplot_combined & # fig 2
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`M-BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
fig2a
Rsquaredplot_grouped_palt &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`M-BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
fig3a <- Rsquaredplot_combined_palt & # fig 3
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`M-BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
fig3a
treesizeplot_grouped &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
fig2b <- treesizeplot_combined & # fig 2
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
fig2b
treesizeplot_grouped_palt &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
fig3b <- treesizeplot_combined_palt & # fig 3
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
fig3b
fig2a + fig2b
fig3a + fig3b
plot_list[["ACT"]] + plot_list[["ECLSKscience"]]
ANOVA_list_repeatedmeasures
post_hoc_paired
ANOVA_list_repeatedmeasures
post_hoc_paired
