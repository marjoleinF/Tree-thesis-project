dplyr::arrange(Dataset)
# for every highest Rsq model, add every value of Rsq to the row
Rsquared_empty <- as.data.frame(matrix(NA, nrow = nrow(Rsquared_best_means), ncol = 100))
for(i in 1:nrow(Rsquared_best_means)){
tempRsquareds <- (allMSElong) %>%
dplyr::select(Model, Dataset, Rsquared) %>%
dplyr::filter(Model == as.character(sjlabelled::to_character(Rsquared_best_means[i,1])) & Dataset == as.character(to_character(Rsquared_best_means[i,2]))) %>%
dplyr::select(Rsquared) %>%
t() %>%
as_vector()
Rsquared_empty[i,] <- tempRsquareds
}
Rsquared_best_total <- cbind(Rsquared_best_means, Rsquared_empty)
}
# statistical tests: ANOVA
ANOVA_list <- Rsquared_best_total %>%
dplyr::select(-Rsquared.Mean, -Rsquared.SD) %>%
split(f = .$Dataset) %>%
map(~ (.) %>% dplyr::select(-Dataset) %>%
stats::reshape(varying = c(2:101), v.names = "Rsquared", idvar = "Model", timevar = "fold", direction = "long") %>%
stats::aov(formula = Rsquared ~ Model) %>%
summary
)
# statistical tests: Tukey
tukey_list <- Rsquared_best_total %>%
dplyr::select(-Rsquared.Mean, -Rsquared.SD) %>%
split(f = .$Dataset) %>%
map(~ (.) %>% dplyr::select(-Dataset) %>%
stats::reshape(varying = c(2:101), v.names = "Rsquared", idvar = "Model", timevar = "fold", direction = "long") %>%
rstatix::tukey_hsd(formula = Rsquared ~ Model) %>%
dplyr::mutate(contrast = paste0(.$group1,"---",.$group2),
contrast = str_split(contrast, "---"))
)
# boxplots with tukey tests (i just found out ggbetweenstats is better)
plot_list <- Rsquared_best_total %>%
dplyr::select(-Rsquared.Mean, -Rsquared.SD) %>%
split(f = .$Dataset) %>%
imap(~ (.x) %>% dplyr::select(-Dataset) %>%
stats::reshape(varying = c(2:101), v.names = "Rsquared", idvar = "Model", timevar = "fold", direction = "long") %>%
ggplot(., aes(x = Model, y = Rsquared)) +
geom_boxplot() +
theme_apa() +
ggtitle(label = .y) +
geom_signif(
comparisons = tukey_list[[.y]]$contrast, # hier zou je kunnen aanvragen om alleen glmm met ppd en smearing te doen (of misschien in Tukey test)
y_position = seq(from = max(.x[,3:102])+0.02, to = (max(.x[,3:102]) + (max(.x[,3:102]) - min(.x[,3:102]))/2), length.out = 6),
annotations = tukey_list[[.y]]$p.adj.signif
)
)
test <- Rsquared_best_total %>%
dplyr::select(-Rsquared.Mean, -Rsquared.SD) %>%
split(f = .$Dataset) %>%
map(~ (.) %>% dplyr::select(-Dataset) %>%
stats::reshape(varying = c(2:101), v.names = "Rsquared", idvar = "Model", timevar = "fold", direction = "long")
)
# boxplots with tukey tests (i just found out ggbetweenstats is better)
plot_list2 <- Rsquared_best_total %>%
dplyr::select(-Rsquared.Mean, -Rsquared.SD) %>%
split(f = .$Dataset) %>%
imap(~ (.x) %>% dplyr::select(-Dataset) %>%
stats::reshape(varying = c(2:101), v.names = "Rsquared", idvar = "Model", timevar = "fold", direction = "long") %>%
ggbetweenstats(
data = .,
x = Model,
y = Rsquared,
type = "parametric", # ANOVA or Kruskal-Wallis
var.equal = TRUE, # ANOVA or Welch ANOVA
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE,
ggtheme = theme_apa()
)
)
####################### cool tree size plots ---- N
TS1 <- allTreeSize %>%
pivot_longer(cols = c("BaBart_N.1", "BaBart_N.5", "BaBart_N.10")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("BaBart_N.1", "BaBart_N.5", "BaBart_N.10")) %>%
recode_factor(BaBart_N.1 = "N = 1", BaBart_N.5 = "N = 5", BaBart_N.10 = "N = 10"),
`Tree Size` = value,
Model = factor("PPD sampling")) %>%
dplyr::select(`Generated Sample Size`, `Tree Size`, Model)
TS2 <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.1_palt.0", "Smearing_N.5_palt.0", "Smearing_N.10_palt.0")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("Smearing_N.1_palt.0", "Smearing_N.5_palt.0", "Smearing_N.10_palt.0")) %>%
recode_factor(Smearing_N.1_palt.0 = "N = 1", Smearing_N.5_palt.0 = "N = 5", Smearing_N.10_palt.0 = "N = 10"),
`Tree Size` = value,
Model = factor("Smearing: palt = 0")) %>%
dplyr::select(`Generated Sample Size`, `Tree Size`, Model)
TS3 <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.1_palt.0.25", "Smearing_N.5_palt.0.25", "Smearing_N.10_palt.0.25")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("Smearing_N.1_palt.0.25", "Smearing_N.5_palt.0.25", "Smearing_N.10_palt.0.25")) %>%
recode_factor(Smearing_N.1_palt.0.25 = "N = 1", Smearing_N.5_palt.0.25 = "N = 5", Smearing_N.10_palt.0.25 = "N = 10"),
`Tree Size` = value,
Model = factor("Smearing: palt = .25")) %>%
dplyr::select(`Generated Sample Size`, `Tree Size`, Model)
TS4 <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.1_palt.0.5", "Smearing_N.5_palt.0.5", "Smearing_N.10_palt.0.5")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("Smearing_N.1_palt.0.5", "Smearing_N.5_palt.0.5", "Smearing_N.10_palt.0.5")) %>%
recode_factor(Smearing_N.1_palt.0.5 = "N = 1", Smearing_N.5_palt.0.5 = "N = 5", Smearing_N.10_palt.0.5 = "N = 10"),
`Tree Size` = value,
Model = factor("Smearing: palt = .50")) %>%
dplyr::select(`Generated Sample Size`, `Tree Size`, Model)
treesizeplot_grouped <- (bind_rows(TS1, TS2, TS3, TS4)) %>%
grouped_ggwithinstats(x=`Generated Sample Size`, y = `Tree Size`,
type = "np", pairwise.display = "significant",
grouping.var = Model)
treesizeplot_combined <- (bind_rows(TS1, TS2, TS3, TS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = `Tree Size`,
type = "np", pairwise.display = "significant")
########################## cool Rsq plots ----- N
allRsquaredwide <- allMSElong %>%
dplyr::mutate(fold = rep(1:100,98)) %>%
dplyr::select(Model, Dataset, Rsquared, fold) %>%
split(f = .$Dataset) %>%
map(~ (.) %>% pivot_wider(names_from = Model, values_from = Rsquared)) %>%
bind_rows()
colnames(allRsquaredwide)
RS1 <- allRsquaredwide %>%
pivot_longer(cols = c(`PPD: N=1`, `PPD: N=5`, `PPD: N=10`)) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("PPD: N=1", "PPD: N=5", "PPD: N=10")) %>%
recode_factor("PPD: N=1" = "N = 1", "PPD: N=5" = "N = 5", "PPD: N=10" = "N = 10"),
Rsquared = value,
Model = factor("PPD sampling")) %>%
dplyr::select(`Generated Sample Size`, Rsquared, Model)
RS2 <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=1, palt=0.00", "smearing: N=5, palt=0.00", "smearing: N=10, palt=0.00")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("smearing: N=1, palt=0.00", "smearing: N=5, palt=0.00", "smearing: N=10, palt=0.00")) %>%
recode_factor(`smearing: N=1, palt=0.00` = "N = 1", `smearing: N=5, palt=0.00` = "N = 5", `smearing: N=10, palt=0.00` = "N = 10"),
Rsquared = value,
Model = factor("Smearing: palt = 0")) %>%
dplyr::select(`Generated Sample Size`, Rsquared, Model)
RS3 <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=1, palt=0.25", "smearing: N=5, palt=0.25", "smearing: N=10, palt=0.25")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("smearing: N=1, palt=0.25", "smearing: N=5, palt=0.25", "smearing: N=10, palt=0.25")) %>%
recode_factor(`smearing: N=1, palt=0.25` = "N = 1", `smearing: N=5, palt=0.25` = "N = 5", `smearing: N=10, palt=0.25` = "N = 10"),
Rsquared = value,
Model = factor("Smearing: palt = .25")) %>%
dplyr::select(`Generated Sample Size`, Rsquared, Model)
RS4 <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=1, palt=0.50", "smearing: N=5, palt=0.50", "smearing: N=10, palt=0.50")) %>%
dplyr::mutate(`Generated Sample Size` = factor(name, levels = c("smearing: N=1, palt=0.50", "smearing: N=5, palt=0.50", "smearing: N=10, palt=0.50")) %>%
recode_factor(`smearing: N=1, palt=0.50` = "N = 1", `smearing: N=5, palt=0.50` = "N = 5", `smearing: N=10, palt=0.50` = "N = 10"),
Rsquared = value,
Model = factor("Smearing: palt = .50")) %>%
dplyr::select(`Generated Sample Size`, Rsquared, Model)
Rsquaredplot_grouped <- (bind_rows(RS1, RS2, RS3, RS4)) %>%
grouped_ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
grouping.var = Model)
Rsquaredplot_combined <- (bind_rows(RS1, RS2, RS3, RS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant")
########################## cool Tree Size plots ----- palt
TS2palt <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.1_palt.0", "Smearing_N.1_palt.0.25", "Smearing_N.1_palt.0.5")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(Smearing_N.1_palt.0 = "Palt = 0.00",Smearing_N.1_palt.0.25 = "Palt = 0.25", Smearing_N.1_palt.0.5 = "Palt = 0.50"),
`Tree Size` = value,
Model = factor("Smearing: N = 1")) %>%
dplyr::select(Palt, `Tree Size`, Model)
TS3palt <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.5_palt.0", "Smearing_N.5_palt.0.25","Smearing_N.5_palt.0.5")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(Smearing_N.5_palt.0 = "Palt = 0.00",Smearing_N.5_palt.0.25 = "Palt = 0.25", Smearing_N.5_palt.0.5 = "Palt = 0.50"),
`Tree Size` = value,
Model = factor("Smearing: N = 5")) %>%
dplyr::select(Palt, `Tree Size`, Model)
TS4palt <- allTreeSize %>%
pivot_longer(cols = c("Smearing_N.10_palt.0", "Smearing_N.10_palt.0.25" , "Smearing_N.10_palt.0.5")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(Smearing_N.10_palt.0 = "Palt = 0.00",Smearing_N.10_palt.0.25 = "Palt = 0.25", Smearing_N.10_palt.0.5 = "Palt = 0.50"),
`Tree Size` = value,
Model = factor("Smearing: N = 10")) %>%
dplyr::select(Palt, `Tree Size`, Model)
treesizeplot_grouped_palt <- (bind_rows(TS2palt, TS3palt, TS4palt)) %>%
grouped_ggwithinstats(x=Palt, y = `Tree Size`,
type = "np", pairwise.display = "significant",
grouping.var = Model)
treesizeplot_combined_palt <- (bind_rows(TS2palt, TS3palt, TS4palt)) %>%
ggwithinstats(x=Palt, y = `Tree Size`,
type = "np", pairwise.display = "significant")
########################## cool Rsq plots ----- palt
RS2palt <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=1, palt=0.00", "smearing: N=1, palt=0.25", "smearing: N=1, palt=0.50")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(`smearing: N=1, palt=0.00` = "Palt = 0.00", `smearing: N=1, palt=0.25` = "Palt = 0.25", `smearing: N=1, palt=0.50` = "Palt = 0.50"),
Rsquared = value,
Model = factor("Smearing: N = 1")) %>%
dplyr::select(Palt, Rsquared, Model)
RS3palt <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=5, palt=0.00", "smearing: N=5, palt=0.25","smearing: N=5, palt=0.50")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(`smearing: N=5, palt=0.00` = "Palt = 0.00", `smearing: N=5, palt=0.25` = "Palt = 0.25", `smearing: N=5, palt=0.50` = "Palt = 0.50"),
Rsquared = value,
Model = factor("Smearing: N = 5")) %>%
dplyr::select(Palt, Rsquared, Model)
RS4palt <- allRsquaredwide %>%
pivot_longer(cols = c("smearing: N=10, palt=0.00", "smearing: N=10, palt=0.25" , "smearing: N=10, palt=0.50")) %>%
dplyr::mutate(Palt = factor(name) %>%
recode_factor(`smearing: N=10, palt=0.00` = "Palt = 0.00", `smearing: N=10, palt=0.25` = "Palt = 0.25", `smearing: N=10, palt=0.50` = "Palt = 0.50"),
Rsquared = value,
Model = factor("Smearing: N = 10")) %>%
dplyr::select(Palt, Rsquared, Model)
Rsquaredplot_grouped_palt <- (bind_rows(RS2palt, RS3palt, RS4palt)) %>%
grouped_ggwithinstats(x=Palt, y = Rsquared,
type = "np", pairwise.display = "significant",
grouping.var = Model)
Rsquaredplot_combined_palt <- (bind_rows(RS2palt, RS3palt, RS4palt)) %>%
ggwithinstats(x=Palt, y = Rsquared,
type = "np", pairwise.display = "significant")
plot_list
plot_list2
treesizeplot_grouped
treesizeplot_combined
Rsquaredplot_grouped
Rsquaredplot_combined
treesizeplot_grouped_palt
treesizeplot_combined_palt
Rsquaredplot_grouped_palt
Rsquaredplot_combined_palt
pdf(file = coolplots.pdf)
pdf(file = "coolplots.pdf")
treesizeplot_grouped
treesizeplot_combined
Rsquaredplot_grouped
Rsquaredplot_combined
treesizeplot_grouped_palt
treesizeplot_combined_palt
Rsquaredplot_grouped_palt
Rsquaredplot_combined_palt
dev.off()
save(list = c("plot_list",
"plot_list2",
"treesizeplot_grouped",
"treesizeplot_combined",
"Rsquaredplot_grouped",
"Rsquaredplot_combined",
"treesizeplot_grouped_palt",
"treesizeplot_combined_palt",
"Rsquaredplot_grouped_palt",
"Rsquaredplot_combined_palt"),
file = "coolplots.RData")
save(list = c("plot_list",
"plot_list2",
"treesizeplot_grouped",
"treesizeplot_combined",
"Rsquaredplot_grouped",
"Rsquaredplot_combined",
"treesizeplot_grouped_palt",
"treesizeplot_combined_palt",
"Rsquaredplot_grouped_palt",
"Rsquaredplot_combined_palt"),
file = "coolplots.RData")
load("coolplots.Rdata")
library("haven")
library("dbarts")
library("glmertree")
library("dplyr")
library("here")
library("multilevel")
library("tidyverse")
library("LongCART")
library("reshape2")
library("rempsyc")
library("readr")
library("stats")
library("ggsignif")
library("sjlabelled")
library("rstatix")
library("jtools")
library("Hmisc")
library("ggstatsplot")
(bind_rows(RS1, RS2, RS3, RS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
pointpath = FALSE)
(bind_rows(RS1, RS2, RS3, RS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
centrality.point.args = list(alpha = 0))
(bind_rows(RS1, RS2, RS3, RS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "p", pairwise.display = "significant",
centrality.point.args = list(alpha = 0))
(bind_rows(RS1, RS2, RS3, RS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
centrality.plotting = mean)
(bind_rows(RS1, RS2, RS3, RS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
centrality.plotting = mean) &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
(bind_rows(RS1, RS2, RS3, RS4)) %>%
ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
centrality.type = "parametric") &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
(bind_rows(RS1, RS2, RS3, RS4)) %>%
grouped_ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
grouping.var = Model) &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
(bind_rows(RS1, RS2, RS3, RS4)) %>%
grouped_ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "np", pairwise.display = "significant",
grouping.var = Model,
centrality.type = "p") &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
(bind_rows(RS1, RS2, RS3, RS4)) %>%
grouped_ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "p", pairwise.display = "significant",
grouping.var = Model) &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
(bind_rows(RS1, RS2, RS3, RS4)) %>%
grouped_ggwithinstats(x=`Generated Sample Size`, y = Rsquared,
type = "r", pairwise.display = "significant",
grouping.var = Model) &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
(bind_rows(RS1, RS2, RS3, RS4)) %>%
ggbetweenstats(x=`Generated Sample Size`, y = Rsquared) &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
(bind_rows(RS1, RS2, RS3, RS4)) %>%
grouped_ggbetweenstats(x=`Generated Sample Size`, y = Rsquared,
grouping.var = Model) &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
load("coolplots.Rdata")
Rsquaredplot_grouped &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_combined &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_grouped_palt &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_combined_palt &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
treesizeplot_grouped &
geom_hline(yintercept = mean(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_combined &
geom_hline(yintercept = mean(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_grouped_palt &
geom_hline(yintercept = mean(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_combined_palt &
geom_hline(yintercept = mean(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
Rsquaredplot_grouped &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_combined &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_grouped_palt &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_combined_palt &
geom_hline(yintercept = mean(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = mean(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = mean(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
treesizeplot_grouped &
geom_hline(yintercept = mean(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_combined &
geom_hline(yintercept = mean(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_grouped_palt &
geom_hline(yintercept = mean(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_combined_palt &
geom_hline(yintercept = mean(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = mean(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
load("coolplots.Rdata")
plot_list
plot_list2
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_combined &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_grouped_palt &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_combined_palt &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
treesizeplot_grouped &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_combined &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_grouped_palt &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_combined_palt &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 0.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 0, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.2, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
load("coolplots.Rdata")
plot_list
plot_list2
Rsquaredplot_grouped &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_combined &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_grouped_palt &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
Rsquaredplot_combined_palt &
geom_hline(yintercept = median(allRsquaredwide$`GLMM tree`), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allRsquaredwide$`GLMM tree`), label = "italic(`GLMM`)", vjust = 1.5, parse = TRUE, color = "#0000CC") &
geom_hline(yintercept = median(allRsquaredwide$BART), linetype = "dashed", color = "#FF0000") &
annotate("text", x = 0.6, y = median(allRsquaredwide$BART), label = "italic(`BART`)", vjust = -0.5, parse = TRUE, color = "#FF0000")
treesizeplot_grouped &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_combined &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_grouped_palt &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
treesizeplot_combined_palt &
geom_hline(yintercept = median(allTreeSize$GLMM_tree), linetype = "dashed", color = "#0000CC") &
annotate("text", x = 0.6, y = median(allTreeSize$GLMM_tree), label = "italic(`GLMM`)", vjust = -0.5, parse = TRUE, color = "#0000CC")
