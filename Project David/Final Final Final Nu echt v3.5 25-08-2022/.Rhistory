ggtitle("Rsquared for every Dataset")
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Rsquared for every Dataset")
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.8),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Rsquared for every Dataset")
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.2),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Rsquared for every Dataset")
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Rsquared for every Dataset")
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ggtitle(expression (~R^2))
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ggtitle(expression (~R^2    "Rsquared for every Dataset"))
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ggtitle(expression (R^2~"Rsquared for every Dataset"))
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ylab(expression(R^2)) +
ggtitle(expression(R^2~" for every Dataset"))
# plot combined Rsquared
ggplot(allMSElong, aes(x=Rsquared, y=Model, fill=Model)) +
geom_boxplot() +
labs(x = "MSE / variance(y) a.k.a. Rsquared") +
theme(legend.position = "none",
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 4: Rsquared combined")
# plot combined Rsquared
ggplot(allMSElong, aes(x=Rsquared, y=Model, fill=Model)) +
geom_boxplot() +
labs(x = "MSE / variance(y) a.k.a. Rsquared") +
theme(legend.position = "none",
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 4: Rsquared combined")
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ylab(expression(R^2)) +
ggtitle(expression(R^2~" for every Dataset"))
rm(list = ls())
# lees data in
Safety_MSE <- Filter(function(x)!all(is.na(x)), read.table(file = "Safety_MSE.txt", header = TRUE, sep = ",", row.names = 1))
Safety_TreeSize <- Filter(function(x)!all(is.na(x)), read.table(file = "Safety_TreeSize.txt", header = TRUE, sep = ",", row.names = 1))
ACT_MSE <- Filter(function(x)!all(is.na(x)), read.table(file = "ACT_MSE.txt", header = TRUE, sep = ",", row.names = 1))
ACT_TreeSize <- Filter(function(x)!all(is.na(x)), read.table(file = "ACT_TreeSize.txt", header = TRUE, sep = ",", row.names = 1))
ECLSKmath_MSE <- Filter(function(x)!all(is.na(x)), read.table(file = "ECLSKmath_MSE.txt", header = TRUE, sep = ",", row.names = 1))
ECLSKmath_TreeSize <- Filter(function(x)!all(is.na(x)), read.table(file = "ECLSKmath_TreeSize.txt", header = TRUE, sep = ",", row.names = 1))
ECLSKreading_MSE <- Filter(function(x)!all(is.na(x)), read.table(file = "ECLSKreading_MSE.txt", header = TRUE, sep = ",", row.names = 1))
ECLSKreading_TreeSize <- Filter(function(x)!all(is.na(x)), read.table(file = "ECLSKreading_TreeSize.txt", header = TRUE, sep = ",", row.names = 1))
ECLSKscience_MSE <- Filter(function(x)!all(is.na(x)), read.table(file = "ECLSKscience_MSE.txt", header = TRUE, sep = ",", row.names = 1))[,1:14]
ECLSKscience_TreeSize <- Filter(function(x)!all(is.na(x)), read.table(file = "ECLSKscience_TreeSize.txt", header = TRUE, sep = ",", row.names = 1))[,1:13]
ECLSKschool_MSE <- Filter(function(x)!all(is.na(x)), read.table(file = "ECLSKschool_MSE.txt", header = TRUE, sep = ",", row.names = 1))
ECLSKschool_TreeSize <- Filter(function(x)!all(is.na(x)), read.table(file = "ECLSKschool_TreeSize.txt", header = TRUE, sep = ",", row.names = 1))
marriage_MSE <- Filter(function(x)!all(is.na(x)), read.table(file = "marriage_MSE.txt", header = TRUE, sep = ",", row.names = 1))
marriage_TreeSize <- Filter(function(x)!all(is.na(x)), read.table(file = "marriage_TreeSize.txt", header = TRUE, sep = ",", row.names = 1))
# combine all MSE datasets
MSEsets <- mget(grep(x = ls(), pattern = "MSE", value = TRUE))
allMSE <- do.call("rbind", MSEsets)
# combine all MSE datasets
TreeSizesets <- mget(grep(x = ls(), pattern = "TreeSize", value = TRUE))
allTreeSize <- do.call("rbind", TreeSizesets)
# plot relative MSE's
relMSE <- apply(X = allMSE, MARGIN = 1, FUN = function(x){x/min(x)})
relMSElong <- melt(relMSE)
colnames(relMSElong) <- c("Model", "Dataset", "MSE")
relMSElong$Dataset <- gsub("_MSE\\.[0-9]+", "", relMSElong$Dataset)
relMSElong$Dataset <- as.factor(relMSElong$Dataset)
ggplot(relMSElong, aes(x=Dataset, y=MSE, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free", nrow = 1) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Relative MSE for every Dataset")
ggplot(relMSElong, aes(x=MSE, y=Model, fill=Model)) +
geom_boxplot() +
labs(x = "MSE / min(MSE)") +
theme(legend.position = "none",
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 4: Relative MSE combined")
# plot absolute MSE's
allMSElong <- melt(as.matrix(allMSE))
allMSElong$Var3 <- allMSElong$Var1
allMSElong$Var1 <- allMSElong$Var2
allMSElong$Var2 <- allMSElong$Var3
allMSElong$Var3 <- allMSElong$niks
colnames(allMSElong) <- c("Model", "Dataset", "MSE")
allMSElong$Dataset <- gsub("_MSE\\.[0-9]+", "", allMSElong$Dataset)
allMSElong$Dataset <- as.factor(allMSElong$Dataset)
ggplot(allMSElong, aes(x=Model, y=MSE, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free", nrow = 1) +
theme(axis.text.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 3: Absolute MSE for every dataset")
# plot absolte TreeSize
allTreeSizelong <- melt(as.matrix(allTreeSize))
allTreeSizelong$Var3 <- allTreeSizelong$Var1
allTreeSizelong$Var1 <- allTreeSizelong$Var2
allTreeSizelong$Var2 <- allTreeSizelong$Var3
allTreeSizelong$Var3 <- allTreeSizelong$niks
colnames(allTreeSizelong) <- c("Model", "Dataset", "Tree Size")
allTreeSizelong$Dataset <- gsub("_TreeSize\\.[0-9]+", "", allTreeSizelong$Dataset)
allTreeSizelong$Dataset <- as.factor(allTreeSizelong$Dataset)
ggplot(allTreeSizelong, aes(x=`Tree Size`, y=Model, fill=Model)) +
geom_boxplot() +
theme(legend.position = "none",
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 2: Tree Size combined")
ggplot(allTreeSizelong, aes(x=Model, y=`Tree Size`, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free", nrow = 1) +
theme(axis.text.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 1: Tree Size for every dataset")
# plot relative TreeSize
relTreeSize <- apply(X = allTreeSize, MARGIN = 1, FUN = function(x){x/min(x)})
relTreeSizelong <- melt(relTreeSize)
colnames(relTreeSizelong) <- c("Model", "Dataset", "Tree Size")
relTreeSizelong$Dataset <- gsub("_TreeSize\\.[0-9]+", "", relTreeSizelong$Dataset)
relTreeSizelong$Dataset <- as.factor(relTreeSizelong$Dataset)
ggplot(relTreeSizelong, aes(x=`Tree Size`, y=Model, fill=Model)) +
geom_boxplot() +
theme(legend.position = "none",
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Relative Tree Size combined")
ggplot(relTreeSizelong, aes(x=Model, y=`Tree Size`, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free", nrow = 1) +
theme(axis.text.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 1: Relative Tree Size for every dataset")
############ calculate variance for every dataset ############
### safety ###
set.seed(42)
data = read_sav(file.path(here(),"Project David","Safety.sav"))
var_safety <- var(data$unsafe)
### ACT ###
set.seed(42)
data(ACTG175)
## Remove missings
ACTG175 <- ACTG175[!is.na(ACTG175$cd4), ]
sapply(data, class)
## Correct coding of factors
ACTG175$pidnum <- factor(ACTG175$pidnum)
ACTG175$hemo <- factor(ACTG175$hemo)
ACTG175$homo <- factor(ACTG175$homo)
ACTG175$drugs <- factor(ACTG175$drugs)
ACTG175$oprior <- factor(ACTG175$oprior)
ACTG175$z30 <- factor(ACTG175$z30)
ACTG175$zprior <- factor(ACTG175$zprior)
ACTG175$race <- factor(ACTG175$race)
ACTG175$str2 <- factor(ACTG175$str2)
ACTG175$symptom <- factor(ACTG175$symptom)
ACTG175$treat <- factor(ACTG175$treat)
ACTG175$offtrt <- factor(ACTG175$offtrt)
data <- ACTG175[ACTG175$pidnum %in% sample(x = unique(ACTG175$pidnum), size = 377),]
rm(ACTG175)
var_ACT <- var(data$cd4)
### math ###
set.seed(42)
load(file.path(here(),"Project David","ECLSK","Math ability data.Rdata"))
data <- mathdata[mathdata$CHILDID %in% sample(x = unique(mathdata$CHILDID), size = 200),]
sapply(X = data, FUN = class)
table(data$RACE)
data$CHILDID <- factor(data$CHILDID)
rm(mathdata)
var_math <- var(data$score)
### reading ###
set.seed(42)
load(file.path(here(),"Project David","ECLSK","Reading ability data.Rdata"))
data <- readdata[readdata$CHILDID %in% sample(x = unique(readdata$CHILDID), size = 200),]
data$asmtmm <- factor(data$asmtmm)
data$CHILDID <- factor(data$CHILDID)
rm(readdata)
var_reading <- var(data$score)
### science ###
set.seed(42)
load(file.path(here(),"Project David","ECLSK","Science ability data.Rdata"))
data <- sciedata[sciedata$CHILDID %in% sample(x = unique(sciedata$CHILDID), size = 333),]
data$asmtmm <- as.factor(data$asmtmm)
rm(sciedata)
var_science <- var(data$score)
### school ###
set.seed(42)
load(file = "ECLSK_school.Rda")
Data <- Data %>%
group_by(school_ID) %>%
mutate(school_read = mean(as.numeric(child_read))) %>%
ungroup()
#Data <- Data[Data$school_ID %in% sort(unique(Data$school_ID))[table(Data$school_ID) >= 10],]
data <- Data[Data$school_ID %in% sample(x = unique(Data$school_ID), size = 146),]
data$school_ID <- factor(data$school_ID)
rm(Data)
data <- as.data.frame(data)
var_school <- var(data$child_readscore)
### marriage ###
set.seed(42)
load("practical6_surveydata.Rda")
data <- g
data <- na.omit(data)
data$marriage_01 <- as.numeric(data$marriage)
data$marriage <- factor(data$marriage)
data <- data[sample(x = 1:nrow(data), size = 1000 , replace = F),]
rm(g)
var_marriage <- var(data$marriage_01)
rm(data)
# add to long dataset
allMSElong$Variance <- NA
allMSElong$Variance[(allMSElong$Dataset == "ACT")] <- var_ACT
allMSElong$Variance[(allMSElong$Dataset == "ECLSKmath")] <- var_math
allMSElong$Variance[(allMSElong$Dataset == "ECLSKreading")] <- var_reading
allMSElong$Variance[(allMSElong$Dataset == "ECLSKschool")] <- var_school
allMSElong$Variance[(allMSElong$Dataset == "ECLSKscience")] <- var_science
allMSElong$Variance[(allMSElong$Dataset == "marriage")] <- var_marriage
allMSElong$Variance[(allMSElong$Dataset == "Safety")] <- var_safety
allMSElong$Rsquared <- 1 - allMSElong$MSE / allMSElong$Variance
# plot combined Rsquared
ggplot(allMSElong, aes(x=Rsquared, y=Model, fill=Model)) +
geom_boxplot() +
labs(x = "MSE / variance(y) a.k.a. Rsquared") +
theme(legend.position = "none",
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 4: Rsquared combined")
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ylab(expression(R^2)) +
ggtitle(expression(R^2~" for every Dataset"))
#######################
ggplot(allTreeSizelong, aes(x=Model, y=`Tree Size`, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free", nrow = 2) +
theme(axis.text.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 1: Tree Size for every dataset")
# plot combined Rsquared
ggplot(allMSElong, aes(x=Rsquared, y=Model, fill=Model)) +
geom_boxplot() +
labs(x = "MSE / variance(y) a.k.a. Rsquared") +
theme(legend.position = "none",
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle(expression(R^2~" combined"))
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ylab(expression(R^2)) +
ggtitle(expression(R^2~" for every dataset"))
names(allTreeSizelong$Model)
table(allTreeSizelong$Model)
class(allTreeSizelong$Model)
levels(allTreeSizelong$Model)
levels(allTreeSizelong$Model) <- c(`GLMM tree`, `PPD: N=1`, `PPD: N=5`, `PPD: N=10`, `smearing: N=1, palt=0.00`, `smearing: N=5, palt=0.00`, `smearing: N=10, palt=0.00`, `smearing: N=1, palt=0.25`, `smearing: N=5, palt=0.25`, `smearing: N=10, palt=0.25`, `smearing: N=1, palt=0.50`, `smearing: N=5, palt=0.50`, `smearing: N=10, palt=0.50`)
levels(allTreeSizelong$Model) <- c("GLMM tree", "PPD: N=1", "PPD: N=5", "PPD: N=10", "smearing: N=1, palt=0.00", "smearing: N=5, palt=0.00", "smearing: N=10, palt=0.00", "smearing: N=1, palt=0.25", "smearing: N=5, palt=0.25", "smearing: N=10, palt=0.25", "smearing: N=1, palt=0.50", "smearing: N=5, palt=0.50", "smearing: N=10, palt=0.50")
levels(allTreeSizelong$Model)
#######################
ggplot(allTreeSizelong, aes(x=Model, y=`Tree Size`, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free", nrow = 2) +
theme(axis.text.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ggtitle("Figure 1: Tree Size for every dataset")
levels(allMSElong)
class(allMSElong$Model)
levels(allMSElong$Model)
levels(allMSElong$Model) <- c("GLMM tree", "PPD: N=1", "PPD: N=5", "PPD: N=10", "smearing: N=1, palt=0.00", "smearing: N=5, palt=0.00", "smearing: N=10, palt=0.00", "smearing: N=1, palt=0.25", "smearing: N=5, palt=0.25", "smearing: N=10, palt=0.25", "smearing: N=1, palt=0.50", "smearing: N=5, palt=0.50", "smearing: N=10, palt=0.50")
levels(allMSElong$Model) <- c("GLMM tree","BART", "PPD: N=1", "PPD: N=5", "PPD: N=10", "smearing: N=1, palt=0.00", "smearing: N=5, palt=0.00", "smearing: N=10, palt=0.00", "smearing: N=1, palt=0.25", "smearing: N=5, palt=0.25", "smearing: N=10, palt=0.25", "smearing: N=1, palt=0.50", "smearing: N=5, palt=0.50", "smearing: N=10, palt=0.50")
# plot combined Rsquared
ggplot(allMSElong, aes(x=Rsquared, y=Model, fill=Model)) +
geom_boxplot() +
labs(x = "MSE / variance(y) a.k.a. Rsquared") +
theme(legend.position = "none",
axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
plot.title=element_text(size=18,face="bold")) +
ggtitle(expression(R^2~" combined"))
ggplot(allMSElong, aes(x=Dataset, y=Rsquared, fill=Model)) +
geom_boxplot() +
facet_wrap(~Dataset, scales = "free_x", nrow = 2) +
theme(axis.title=element_text(size=14,face="bold"),
axis.text=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=14,face="bold"),
legend.position = c(0.82,0.25),
plot.title=element_text(size=18,face="bold")) +
ylab(expression(R^2)) +
ggtitle(expression(R^2~" for every dataset"))
table1
table2
table3
# Mean and SD Tree Sizes
table1 <- allTreeSizelong %>%
group_by(Model, Dataset) %>%
summarise(M = mean(`Tree Size`), SD = round(sd(`Tree Size`), digits = 2)) %>%
ungroup() %>%
pivot_wider(
names_from = Dataset,
names_glue = "{Dataset}.{.value}",
values_from = c(M, SD)
) %>%
dplyr::select(Model, order(names(.))) %>%
nice_table(., separate.header = TRUE, italics = seq(.),
title = c("Mean tree size and standard deviation","Table 1"))
# Mean and SD Tree Sizes
table3 <- allMSElong %>%
group_by(Model, Dataset) %>%
summarise(M = mean(MSE), SD = round(sd(MSE), digits = 2)) %>%
ungroup() %>%
pivot_wider(
names_from = Dataset,
names_glue = "{Dataset}.{.value}",
values_from = c(M, SD)
) %>%
dplyr::select(Model, order(names(.))) %>%
nice_table(., separate.header = TRUE, italics = seq(.),
title = c("Mean MSE and standard deviation","Table 3"))
# Combined Tree Size and Relative MSE
table2 <- right_join(
allTreeSizelong %>%
group_by(Model) %>%
summarise(`Tree Size.M` = round(mean(`Tree Size`), digits = 2), `Tree Size.SD` = round(sd(`Tree Size`), digits = 2)) %>%
ungroup(),
relMSElong %>%
group_by(Model) %>%
summarise(`Relative MSE.M` = round(mean(`MSE`), digits = 2), `Relative MSE.SD` = round(sd(`MSE`), digits = 2)) %>%
ungroup(),
by = "Model") %>%
nice_table(., separate.header = TRUE, italics = seq(.),
title = c("Combined Tree Size and Relative MSE","Table 2"))
table1
table2
table3
# Mean and SD Tree Sizes
table3 <- allMSElong %>%
group_by(Model, Dataset) %>%
summarise(M = mean(Rsquared), SD = round(sd(Rsquared), digits = 2)) %>%
ungroup() %>%
pivot_wider(
names_from = Dataset,
names_glue = "{Dataset}.{.value}",
values_from = c(M, SD)
) %>%
dplyr::select(Model, order(names(.))) %>%
nice_table(., separate.header = TRUE, italics = seq(.),
title = c("Mean MSE and standard deviation","Table 3"))
table3
# Mean and SD Tree Sizes
table3 <- allMSElong %>%
group_by(Model, Dataset) %>%
summarise(M = mean(Rsquared), SD = round(sd(Rsquared), digits = 2)) %>%
ungroup() %>%
pivot_wider(
names_from = Dataset,
names_glue = "{Dataset}.{.value}",
values_from = c(M, SD)
) %>%
dplyr::select(Model, order(names(.))) %>%
nice_table(., separate.header = TRUE, italics = seq(.),
title = c("Rsquared and standard deviation","Table 3"))
table3
table2
# Combined Tree Size and Relative MSE
table2 <- allMSElong %>%
group_by(Model) %>%
summarise(`Relative MSE.M` = round(mean(`MSE`), digits = 2), `Relative MSE.SD` = round(sd(`MSE`), digits = 2)) %>%
ungroup() %>%
nice_table(., separate.header = TRUE, italics = seq(.),
title = c("Combined Tree Size and Relative MSE","Table 2"))
table2
# Combined Tree Size and Relative MSE
table2 <- allMSElong %>%
group_by(Model) %>%
summarise(`Rsquared.M` = round(mean(`Rsquared`), digits = 2), `Rsquared.SD` = round(sd(`Rsquared`), digits = 2)) %>%
ungroup() %>%
nice_table(., separate.header = TRUE, italics = seq(.),
title = c("Combined Rsquared","Table 2"))
table2
summary(allMSElong)
